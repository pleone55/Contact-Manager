{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\Projects\\\\react\\\\contact-manager\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contact/ContactContext';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered,\n    getContacts,\n    loading\n  } = contactContext;\n  useEffect(() => {\n    getContacts(); //eslint-disable-next-line\n  }, []);\n\n  if (contacts.length === 0) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Please Add a Contact\");\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, filtered !== null ? filtered.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))) : contacts.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })))));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["C:/Users/Paul/Desktop/Projects/react/contact-manager/client/src/components/contacts/Contacts.js"],"names":["React","useContext","useEffect","CSSTransition","TransitionGroup","ContactItem","ContactContext","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,cAAc,GAAGP,UAAU,CAACK,cAAD,CAAjC;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA;AAAnC,MAA+CJ,cAArD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW,GADC,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAGF,QAAQ,CAACI,MAAT,KAAoB,CAAvB,EAA0B;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;;AACD,SACI,0CACA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,KAAK,IAAb,GACCA,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjE,CADF,CADD,GAGCN,QAAQ,CAACK,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjE,CADF,CAJN,CADA,CADJ;AAWH,CAvBD;;AAwBA,eAAeR,QAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactItem from './ContactItem';\r\nimport ContactContext from '../../context/contact/ContactContext';\r\n\r\nconst Contacts = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const { contacts, filtered, getContacts, loading } = contactContext;\r\n\r\n    useEffect(() => {\r\n        getContacts();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    if(contacts.length === 0) {\r\n        return <h4>Please Add a Contact</h4>\r\n    }\r\n    return (\r\n        <>\r\n        <TransitionGroup>\r\n            {filtered !== null \r\n            ? filtered.map(contact => (\r\n                <CSSTransition key={contact._id} timeout={500} classNames=\"item\"><ContactItem contact={contact} /></CSSTransition>))\r\n            : contacts.map(contact => (\r\n                <CSSTransition key={contact._id} timeout={500} classNames=\"item\"><ContactItem contact={contact} /></CSSTransition>))}\r\n        </TransitionGroup>\r\n        </>\r\n    )\r\n}\r\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}