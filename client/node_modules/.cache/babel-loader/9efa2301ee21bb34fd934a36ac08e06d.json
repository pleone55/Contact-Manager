{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\Projects\\\\react\\\\contact-manager\\\\client\\\\src\\\\context\\\\auth\\\\AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //Load User\n\n  const loadUser = async () => {\n    //load token into global headers. Private route\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('http://localhost:7000/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //Register User\n\n\n  const registerUser = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('http://localhost:7000/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Login User\n\n\n  const loginUser = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('http://localhost:7000/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Logout User\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); //Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      registerUser,\n      clearErrors,\n      loginUser,\n      loadUser,\n      logout\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Paul/Desktop/Projects/react/contact-manager/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","AuthReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","user","loading","error","state","dispatch","loadUser","res","get","type","payload","data","err","registerUser","formData","config","headers","post","response","msg","loginUser","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from './AuthContext';\r\nimport AuthReducer from './AuthReducer';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERRORS\r\n} from '../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        isAuthenticated: null,\r\n        user: null,\r\n        loading: true,\r\n        error: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n    //Load User\r\n    const loadUser = async() => {\r\n        //load token into global headers. Private route\r\n        if(localStorage.token) {\r\n            setAuthToken(localStorage.token);\r\n        }\r\n\r\n        try {\r\n            const res = await axios.get('http://localhost:7000/api/auth');\r\n\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: res.data\r\n            });\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            });\r\n        }\r\n    };\r\n\r\n    //Register User\r\n    const registerUser = async(formData) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:7000/api/users', formData, config);\r\n\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data\r\n            });\r\n\r\n            loadUser();\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n                payload: err.response.data.msg\r\n            })\r\n        }\r\n    }\r\n\r\n    //Login User\r\n    const loginUser = async(formData) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:7000/api/auth', formData, config);\r\n\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data\r\n            });\r\n\r\n            loadUser();\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n                payload: err.response.data.msg\r\n            })\r\n        }\r\n    }\r\n    //Logout User\r\n    const logout = () => dispatch({ type: LOGOUT });\r\n\r\n    //Clear Errors\r\n    const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                isAuthenticated: state.isAuthenticated,\r\n                loading: state.loading,\r\n                user: state.user,\r\n                error: state.error,\r\n                registerUser,\r\n                clearErrors,\r\n                loginUser,\r\n                loadUser,\r\n                logout\r\n            }}\r\n        >\r\n            { props.children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}