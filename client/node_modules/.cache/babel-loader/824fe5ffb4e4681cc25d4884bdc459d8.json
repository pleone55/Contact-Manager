{"ast":null,"code":"import { ADD_CONTACT, CONTACT_ERROR, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, GET_CONTACTS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload],\n        loading: false\n      };\n\n    case GET_CONTACTS:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload),\n        loading: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n        loading: false\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Paul/Desktop/Projects/react/contact-manager/client/src/context/contact/ContactReducer.js"],"names":["ADD_CONTACT","CONTACT_ERROR","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","GET_CONTACTS","state","action","type","contacts","payload","loading","error","filter","contact","id","current","map","filtered","regex","RegExp","name","match","email"],"mappings":"AAAA,SACIA,WADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,YARJ,EASIC,YATJ,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B,CAFP;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,YAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFd;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKb,aAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHM,QAAAA,KAAK,EAAEL,MAAM,CAACG;AAFX,OAAP;;AAIJ,SAAKX,cAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeI,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACG,OAAvD,CAFP;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKX,WAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHU,QAAAA,OAAO,EAAET,MAAM,CAACG;AAFb,OAAP;;AAIJ,SAAKT,aAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHU,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKd,cAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeQ,GAAf,CAAmBH,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACG,OAAP,CAAeK,EAA9B,GAAmCR,MAAM,CAACG,OAA1C,GAAoDI,OAAlF,CAFP;AAGHH,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKR,eAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHY,QAAAA,QAAQ,EAAEZ,KAAK,CAACG,QAAN,CAAeI,MAAf,CAAsBC,OAAO,IAAI;AACvC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEb,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOI,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACH,SAHS;AAFP,OAAP;;AAOJ,SAAKf,YAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHY,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAIJ;AACI,aAAOZ,KAAP;AAtDR;AAwDH,CAzDD","sourcesContent":["import {\r\n    ADD_CONTACT,\r\n    CONTACT_ERROR,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    GET_CONTACTS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.payload],\r\n                loading: false\r\n            };\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: action.payload,\r\n                loading: false\r\n            }\r\n        case CONTACT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload),\r\n                loading: false\r\n            };\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            };\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            };\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\r\n                loading: false\r\n            }\r\n        case FILTER_CONTACTS:\r\n            return {\r\n                ...state,\r\n                filtered: state.contacts.filter(contact => {\r\n                    const regex = new RegExp(`${action.payload}`, 'gi');\r\n                    return contact.name.match(regex) || contact.email.match(regex);\r\n                })\r\n            }\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filtered: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}