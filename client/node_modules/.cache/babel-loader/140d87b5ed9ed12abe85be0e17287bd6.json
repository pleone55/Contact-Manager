{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Paul\\\\Desktop\\\\Projects\\\\react\\\\contact-manager\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\Paul\\\\Desktop\\\\Projects\\\\react\\\\contact-manager\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Paul\\\\Desktop\\\\Projects\\\\react\\\\contact-manager\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import ContactContext from'../../context/contact/ContactContext';var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,current=contactContext.current,clearCurrent=contactContext.clearCurrent,updateContact=contactContext.updateContact;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',email:'',phone:'',type:'personal'});}},[contactContext,current]);var _useState=useState({name:'',email:'',phone:'',type:'personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(event){return setContact(_objectSpread({},contact,_defineProperty({},event.target.name,event.target.value)));};var onSubmit=function onSubmit(event){event.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);}clearAll();};var clearAll=function clearAll(){clearCurrent();};return React.createElement(\"form\",{onSubmit:onSubmit},React.createElement(\"h2\",{className:\"text-primary\"},current?'Edit Contact':'Add Contact'),React.createElement(\"input\",{type:\"text\",placeholder:\"name\",name:\"name\",value:name,onChange:onChange}),React.createElement(\"input\",{type:\"email\",placeholder:\"Email\",name:\"email\",value:email,onChange:onChange}),React.createElement(\"input\",{type:\"text\",placeholder:\"Phone\",name:\"phone\",value:phone,onChange:onChange}),React.createElement(\"h5\",null,\"Contact Type\"),React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type==='personal',onChange:onChange}),\"Personal\",' ',React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",checked:type==='professional',onChange:onChange}),\"Professional\",React.createElement(\"div\",null,React.createElement(\"input\",{type:\"submit\",value:current?'Edit Contact':'Add Contact',className:\"btn btn-primary btn-block\"})),current&&React.createElement(\"div\",null,React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll},\"Clear\")));};export default ContactForm;","map":{"version":3,"sources":["C:/Users/Paul/desktop/Projects/react/contact-manager/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","contact","onChange","event","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport ContactContext from '../../context/contact/ContactContext';\r\n\r\nconst ContactForm = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const { addContact, current, clearCurrent, updateContact } = contactContext;\r\n\r\n    useEffect(() => {\r\n        if(current !== null) {\r\n            setContact(current);\r\n        } else {\r\n            setContact({\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                type: 'personal'\r\n            });\r\n        }\r\n    }, [contactContext, current]);\r\n\r\n    const [contact, setContact] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        type: 'personal'\r\n    });\r\n\r\n    const { name, email, phone, type } = contact;\r\n\r\n    const onChange = event => setContact({ ...contact, [event.target.name]: event.target.value });\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n        if(current === null) {\r\n            addContact(contact);\r\n        } else {\r\n            updateContact(contact);\r\n        }\r\n        clearAll();\r\n    };\r\n\r\n    const clearAll = () => {\r\n        clearCurrent();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <h2 className=\"text-primary\">{current ? 'Edit Contact' : 'Add Contact'}</h2>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"name\" \r\n                name=\"name\" \r\n                value={name} \r\n                onChange={onChange}\r\n            />\r\n            <input \r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                name=\"email\" \r\n                value={email} \r\n                onChange={onChange}\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Phone\" \r\n                name=\"phone\" \r\n                value={phone} \r\n                onChange={onChange}\r\n            />\r\n            <h5>Contact Type</h5>\r\n            <input type=\"radio\" name=\"type\" value=\"personal\" checked={type === 'personal'} onChange={onChange}/>\r\n            Personal{' '}\r\n            <input type=\"radio\" name=\"type\" value=\"professional\" checked={type === 'professional'} onChange={onChange} />\r\n            Professional\r\n            <div>\r\n                <input type=\"submit\" value={current ? 'Edit Contact' : 'Add Contact'} className=\"btn btn-primary btn-block\"/>\r\n            </div>\r\n            {current && <div>\r\n                <button className=\"btn btn-light btn-block\" onClick={clearAll}>Clear</button>\r\n            </div>}\r\n        </form>\r\n    )\r\n}\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}