{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\Projects\\\\react\\\\contact-manager\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './ContactContext';\nimport ContactReducer from './ContactReducer';\nimport { ADD_CONTACT, CONTACT_ERROR, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, GET_CONTACTS, CLEAR_CONTACTS } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('http://localhost:7000/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR\n      });\n    }\n  }; //Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('http://localhost:7000/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        playload: err.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`http://localhost:7000/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        playload: err.response.msg\n      });\n    }\n  }; //Update Contact\n\n\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`http://localhost:7000/api/contacts/${contact._id}`, contact, config);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        playload: err.response.msg\n      });\n    }\n  }; //Clear Contacts\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/Paul/Desktop/Projects/react/contact-manager/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","ContactReducer","ADD_CONTACT","CONTACT_ERROR","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","GET_CONTACTS","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","addContact","contact","config","headers","post","playload","response","msg","deleteContact","id","delete","updateContact","put","_id","clearContacts","setCurrent","clearCurrent","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport ContactContext from './ContactContext';\r\nimport ContactReducer from './ContactReducer';\r\nimport {\r\n    ADD_CONTACT,\r\n    CONTACT_ERROR,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    GET_CONTACTS,\r\n    CLEAR_CONTACTS\r\n} from '../types';\r\n\r\nconst ContactState = props => {\r\n    const initialState = {\r\n        contacts: null,\r\n        current: null,\r\n        filtered: null,\r\n        error: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n\r\n    //Get Contacts\r\n    const getContacts = async() => {\r\n        try {\r\n            const res = await axios.get('http://localhost:7000/api/contacts');\r\n            dispatch({ type: GET_CONTACTS, payload: res.data });\r\n\r\n        } catch (err) {\r\n            dispatch({ type: CONTACT_ERROR });\r\n        }\r\n    }\r\n\r\n    //Add Contact\r\n    const addContact = async(contact) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:7000/api/contacts', contact, config);\r\n            dispatch({ type: ADD_CONTACT, payload: res.data });\r\n\r\n        } catch (err) {\r\n            dispatch({ type: CONTACT_ERROR, playload: err.response.msg });\r\n        }\r\n    }\r\n\r\n    //Delete Contact\r\n    const deleteContact = async(id) => {\r\n        try {\r\n            await axios.delete(`http://localhost:7000/api/contacts/${id}`);\r\n            dispatch({ type: DELETE_CONTACT, payload: id });\r\n\r\n        } catch (err) {\r\n            dispatch({ type: CONTACT_ERROR, playload: err.response.msg });\r\n        }\r\n        \r\n    }\r\n\r\n    //Update Contact\r\n    const updateContact = async(contact) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.put(`http://localhost:7000/api/contacts/${contact._id}`, contact, config);\r\n            dispatch({ type: UPDATE_CONTACT, payload: res.data });\r\n\r\n        } catch (err) {\r\n            dispatch({ type: CONTACT_ERROR, playload: err.response.msg });\r\n        }\r\n        \r\n    }\r\n\r\n    //Clear Contacts\r\n    const clearContacts = () => {\r\n        dispatch({ type: CLEAR_CONTACTS });\r\n    }\r\n\r\n    //Set Current Contact\r\n    const setCurrent = contact => {\r\n        dispatch({ type: SET_CURRENT, payload: contact });\r\n    }\r\n\r\n    //Clear Current Contact\r\n    const clearCurrent = () => {\r\n        dispatch({ type: CLEAR_CURRENT });\r\n    }\r\n\r\n    //Filter Contacts\r\n    const filterContacts = text => {\r\n        dispatch({ type: FILTER_CONTACTS, payload: text });\r\n    }\r\n    //Clear Filter\r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER });\r\n    }\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n            value={{\r\n                contacts: state.contacts,\r\n                current: state.current,\r\n                error: state.error,\r\n                addContact,\r\n                deleteContact,\r\n                setCurrent,\r\n                clearCurrent,\r\n                updateContact,\r\n                filterContacts,\r\n                clearFilter,\r\n                getContacts,\r\n                clearContacts\r\n            }}\r\n        >\r\n            { props.children }\r\n        </ContactContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}