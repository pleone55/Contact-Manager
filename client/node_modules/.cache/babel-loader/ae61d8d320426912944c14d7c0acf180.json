{"ast":null,"code":"import React,{useContext,useEffect}from'react';import{CSSTransition,TransitionGroup}from'react-transition-group';import ContactContext from'../../context/contact/ContactContext';import ContactItem from'./ContactItem';import Spinner from'../layouts/Spinner';var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filtered=contactContext.filtered,getContacts=contactContext.getContacts,loading=contactContext.loading;useEffect(function(){getContacts();//eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0&&!loading){return React.createElement(\"h4\",null,\"Please Add a Contact\");}return React.createElement(React.Fragment,null,contacts!==null&&!loading?React.createElement(TransitionGroup,null,filtered!==null?filtered.map(function(contact){return React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},React.createElement(ContactItem,{contact:contact}));}):contacts.map(function(contact){return React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},React.createElement(ContactItem,{contact:contact}));})):React.createElement(Spinner,null));};export default Contacts;","map":{"version":3,"sources":["C:/Users/Paul/Desktop/Projects/react/contact-manager/client/src/components/contacts/Contacts.js"],"names":["React","useContext","useEffect","CSSTransition","TransitionGroup","ContactContext","ContactItem","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAMC,CAAAA,cAAc,CAAGR,UAAU,CAACI,cAAD,CAAjC,CADmB,GAEXK,CAAAA,QAFW,CAEkCD,cAFlC,CAEXC,QAFW,CAEDC,QAFC,CAEkCF,cAFlC,CAEDE,QAFC,CAESC,WAFT,CAEkCH,cAFlC,CAESG,WAFT,CAEsBC,OAFtB,CAEkCJ,cAFlC,CAEsBI,OAFtB,CAInBX,SAAS,CAAC,UAAM,CACZU,WAAW,GACX;AACH,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAGF,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAAzC,EAA8C,CAACD,OAAlD,CAA2D,CACvD,MAAO,sDAAP,CACH,CACD,MACI,yCACKH,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,CACG,oBAAC,eAAD,MACKF,QAAQ,GAAK,IAAb,CACKA,QAAQ,CAACI,GAAT,CAAa,SAAAC,OAAO,QAClB,qBAAC,aAAD,EACI,GAAG,CAAEA,OAAO,CAACC,GADjB,CAEI,OAAO,CAAE,GAFb,CAGI,UAAU,CAAC,MAHf,EAKI,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EALJ,CADkB,EAApB,CADL,CAUCN,QAAQ,CAACK,GAAT,CAAa,SAAAC,OAAO,QAClB,qBAAC,aAAD,EACI,GAAG,CAAEA,OAAO,CAACC,GADjB,CAEI,OAAO,CAAE,GAFb,CAGI,UAAU,CAAC,MAHf,EAKI,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EALJ,CADkB,EAApB,CAXN,CADH,CAuBG,oBAAC,OAAD,MAxBR,CADJ,CA6BH,CAzCD,CA0CA,cAAeR,CAAAA,QAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactContext from '../../context/contact/ContactContext';\r\nimport ContactItem from './ContactItem';\r\nimport Spinner from '../layouts/Spinner';\r\n\r\nconst Contacts = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const { contacts, filtered, getContacts, loading } = contactContext;\r\n\r\n    useEffect(() => {\r\n        getContacts();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    if(contacts !== null && contacts.length === 0 && !loading) {\r\n        return <h4>Please Add a Contact</h4>\r\n    }\r\n    return (\r\n        <>\r\n            {contacts !== null && !loading ? (\r\n                <TransitionGroup>\r\n                    {filtered !== null \r\n                        ? filtered.map(contact => (\r\n                            <CSSTransition \r\n                                key={contact._id} \r\n                                timeout={500} \r\n                                classNames=\"item\"\r\n                            >\r\n                                <ContactItem contact={contact} />\r\n                            </CSSTransition>\r\n                        ))\r\n                    : contacts.map(contact => (\r\n                        <CSSTransition \r\n                            key={contact._id} \r\n                            timeout={500} \r\n                            classNames=\"item\"\r\n                        >\r\n                            <ContactItem contact={contact} />\r\n                        </CSSTransition>\r\n                    ))}\r\n            </TransitionGroup>\r\n            ) : (\r\n                <Spinner/>\r\n            )}\r\n        </>\r\n    )\r\n}\r\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}