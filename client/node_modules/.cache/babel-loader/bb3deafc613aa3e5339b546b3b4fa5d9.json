{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\Projects\\\\react\\\\contact-manager\\\\client\\\\src\\\\components\\\\contacts\\\\ContactFilter.js\";\nimport React, { useContext, useRef, useEffect } from 'react';\nimport ContactContext from '../../context/contact/ContactContext';\n\nconst ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    filterContacts,\n    clearFilter,\n    filtered\n  } = contactContext;\n  const text = useRef(''); //if the filter state is = to null set the state to be empty\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  }, []);\n\n  const onChange = event => {\n    if (text.current.value !== '') {\n      filterContacts(event.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    ref: text,\n    placeholder: \"Filter Contacts\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nexport default ContactFilter;","map":{"version":3,"sources":["C:/Users/Paul/Desktop/Projects/react/contact-manager/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","contactContext","filterContacts","clearFilter","filtered","text","current","value","onChange","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,cAAc,GAAGL,UAAU,CAACG,cAAD,CAAjC;AACA,QAAM;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA;AAA/B,MAA4CH,cAAlD;AACA,QAAMI,IAAI,GAAGR,MAAM,CAAC,EAAD,CAAnB,CAHwB,CAKxB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGM,QAAQ,KAAK,IAAhB,EAAsB;AAClBC,MAAAA,IAAI,CAACC,OAAL,CAAaC,KAAb,GAAqB,EAArB;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAGJ,IAAI,CAACC,OAAL,CAAaC,KAAb,KAAuB,EAA1B,EAA8B;AAC1BL,MAAAA,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaH,KAAd,CAAd;AACH,KAFD,MAEO;AACHJ,MAAAA,WAAW;AACd;AACJ,GAND;;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEE,IAAxB;AAA8B,IAAA,WAAW,EAAC,iBAA1C;AAA4D,IAAA,QAAQ,EAAEG,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAxBD;;AAyBA,eAAeR,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\r\nimport ContactContext from '../../context/contact/ContactContext';\r\n\r\nconst ContactFilter = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const { filterContacts, clearFilter, filtered } = contactContext;\r\n    const text = useRef('');\r\n\r\n    //if the filter state is = to null set the state to be empty\r\n    useEffect(() => {\r\n        if(filtered === null) {\r\n            text.current.value = '';\r\n        }\r\n    }, []);\r\n\r\n    const onChange = event => {\r\n        if(text.current.value !== '') {\r\n            filterContacts(event.target.value);\r\n        } else {\r\n            clearFilter();\r\n        }\r\n    }\r\n    return (\r\n        <form>\r\n            <input type=\"text\" ref={text} placeholder=\"Filter Contacts\" onChange={onChange} />\r\n        </form>\r\n    )\r\n}\r\nexport default ContactFilter;"]},"metadata":{},"sourceType":"module"}