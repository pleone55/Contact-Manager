{"ast":null,"code":"import React,{useContext,useRef,useEffect}from'react';import ContactContext from'../../context/contact/ContactContext';var ContactFilter=function ContactFilter(){var contactContext=useContext(ContactContext);var filterContacts=contactContext.filterContacts,clearFilter=contactContext.clearFilter,filtered=contactContext.filtered;var text=useRef('');//if the filter state is = to null set the state to be empty\nuseEffect(function(){if(filtered===null){text.current.value='';}//eslint-disable-next-line\n},[]);var onChange=function onChange(event){if(text.current.value!==''){filterContacts(event.target.value);}else{clearFilter();}};return React.createElement(\"form\",null,React.createElement(\"input\",{type:\"text\",ref:text,placeholder:\"Filter Contacts\",onChange:onChange}));};export default ContactFilter;","map":{"version":3,"sources":["C:/Users/Paul/desktop/Projects/react/contact-manager/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","contactContext","filterContacts","clearFilter","filtered","text","current","value","onChange","event","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAACG,cAAD,CAAjC,CADwB,GAEhBG,CAAAA,cAFgB,CAE0BD,cAF1B,CAEhBC,cAFgB,CAEAC,WAFA,CAE0BF,cAF1B,CAEAE,WAFA,CAEaC,QAFb,CAE0BH,cAF1B,CAEaG,QAFb,CAGxB,GAAMC,CAAAA,IAAI,CAAGR,MAAM,CAAC,EAAD,CAAnB,CAEA;AACAC,SAAS,CAAC,UAAM,CACZ,GAAGM,QAAQ,GAAK,IAAhB,CAAsB,CAClBC,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACH,CACD;AACH,CALQ,CAKN,EALM,CAAT,CAOA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CACtB,GAAGJ,IAAI,CAACC,OAAL,CAAaC,KAAb,GAAuB,EAA1B,CAA8B,CAC1BL,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaH,KAAd,CAAd,CACH,CAFD,IAEO,CACHJ,WAAW,GACd,CACJ,CAND,CAOA,MACI,iCACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,GAAG,CAAEE,IAAxB,CAA8B,WAAW,CAAC,iBAA1C,CAA4D,QAAQ,CAAEG,QAAtE,EADJ,CADJ,CAKH,CAzBD,CA0BA,cAAeR,CAAAA,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\r\nimport ContactContext from '../../context/contact/ContactContext';\r\n\r\nconst ContactFilter = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const { filterContacts, clearFilter, filtered } = contactContext;\r\n    const text = useRef('');\r\n\r\n    //if the filter state is = to null set the state to be empty\r\n    useEffect(() => {\r\n        if(filtered === null) {\r\n            text.current.value = '';\r\n        }\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    const onChange = event => {\r\n        if(text.current.value !== '') {\r\n            filterContacts(event.target.value);\r\n        } else {\r\n            clearFilter();\r\n        }\r\n    }\r\n    return (\r\n        <form>\r\n            <input type=\"text\" ref={text} placeholder=\"Filter Contacts\" onChange={onChange} />\r\n        </form>\r\n    )\r\n}\r\nexport default ContactFilter;"]},"metadata":{},"sourceType":"module"}