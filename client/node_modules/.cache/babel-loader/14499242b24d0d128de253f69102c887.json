{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Paul\\\\Desktop\\\\Projects\\\\react\\\\contact-manager\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\Paul\\\\Desktop\\\\Projects\\\\react\\\\contact-manager\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{ADD_CONTACT,CONTACT_ERROR,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER,GET_CONTACTS,CLEAR_CONTACTS}from'../types';export default(function(state,action){switch(action.type){case ADD_CONTACT:return _objectSpread({},state,{contacts:[action.payload].concat(_toConsumableArray(state.contacts)),loading:false});case GET_CONTACTS:return _objectSpread({},state,{contacts:action.payload,loading:false});case CONTACT_ERROR:return _objectSpread({},state,{error:action.payload});case DELETE_CONTACT:return _objectSpread({},state,{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload;}),loading:false});case UPDATE_CONTACT:return _objectSpread({},state,{contacts:state.contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;}),loading:false});case CLEAR_CONTACTS:return _objectSpread({},state,{contacts:null,filtered:null,error:null,current:null});case SET_CURRENT:return _objectSpread({},state,{current:action.payload});case CLEAR_CURRENT:return _objectSpread({},state,{current:null});case FILTER_CONTACTS:return _objectSpread({},state,{filtered:state.contacts.filter(function(contact){var regex=new RegExp(\"\".concat(action.payload),'gi');return contact.name.match(regex)||contact.email.match(regex);})});case CLEAR_FILTER:return _objectSpread({},state,{filtered:null});default:return state;}});","map":{"version":3,"sources":["C:/Users/Paul/desktop/Projects/react/contact-manager/client/src/context/contact/ContactReducer.js"],"names":["ADD_CONTACT","CONTACT_ERROR","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","GET_CONTACTS","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","error","filter","contact","_id","map","filtered","current","regex","RegExp","name","match","email"],"mappings":"mYAAA,OACIA,WADJ,CAEIC,aAFJ,CAGIC,cAHJ,CAIIC,WAJJ,CAKIC,aALJ,CAMIC,cANJ,CAOIC,eAPJ,CAQIC,YARJ,CASIC,YATJ,CAUIC,cAVJ,KAWO,UAXP,CAaA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAC9B,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKZ,CAAAA,WAAL,CACI,wBACOU,KADP,EAEIG,QAAQ,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,QAA5B,EAFZ,CAGIE,OAAO,CAAE,KAHb,GAKJ,IAAKP,CAAAA,YAAL,CACI,wBACOE,KADP,EAEIG,QAAQ,CAAEF,MAAM,CAACG,OAFrB,CAGIC,OAAO,CAAE,KAHb,GAKJ,IAAKd,CAAAA,aAAL,CACI,wBACOS,KADP,EAEIM,KAAK,CAAEL,MAAM,CAACG,OAFlB,GAIJ,IAAKZ,CAAAA,cAAL,CACI,wBACOQ,KADP,EAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeI,MAAf,CAAsB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBR,MAAM,CAACG,OAA3B,EAA7B,CAFd,CAGIC,OAAO,CAAE,KAHb,GAKJ,IAAKV,CAAAA,cAAL,CACI,wBACOK,KADP,EAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeO,GAAf,CAAmB,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBR,MAAM,CAACG,OAAP,CAAeK,GAA/B,CAAqCR,MAAM,CAACG,OAA5C,CAAsDI,OAA1D,EAA1B,CAFd,CAGIH,OAAO,CAAE,KAHb,GAKJ,IAAKN,CAAAA,cAAL,CACI,wBACOC,KADP,EAEIG,QAAQ,CAAE,IAFd,CAGIQ,QAAQ,CAAE,IAHd,CAIIL,KAAK,CAAE,IAJX,CAKIM,OAAO,CAAE,IALb,GAOJ,IAAKnB,CAAAA,WAAL,CACI,wBACOO,KADP,EAEIY,OAAO,CAAEX,MAAM,CAACG,OAFpB,GAIJ,IAAKV,CAAAA,aAAL,CACI,wBACOM,KADP,EAEIY,OAAO,CAAE,IAFb,GAIJ,IAAKhB,CAAAA,eAAL,CACI,wBACOI,KADP,EAEIW,QAAQ,CAAEX,KAAK,CAACG,QAAN,CAAeI,MAAf,CAAsB,SAAAC,OAAO,CAAI,CACvC,GAAMK,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcb,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOI,CAAAA,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CACH,CAHS,CAFd,GAOJ,IAAKhB,CAAAA,YAAL,CACI,wBACOG,KADP,EAEIW,QAAQ,CAAE,IAFd,GAIJ,QACI,MAAOX,CAAAA,KAAP,CA9DR,CAgEH,CAjED","sourcesContent":["import {\r\n    ADD_CONTACT,\r\n    CONTACT_ERROR,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    GET_CONTACTS,\r\n    CLEAR_CONTACTS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts],\r\n                loading: false\r\n            };\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: action.payload,\r\n                loading: false\r\n            }\r\n        case CONTACT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact._id !== action.payload),\r\n                loading: false\r\n            };\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact),\r\n                loading: false\r\n            }\r\n        case CLEAR_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: null,\r\n                filtered: null,\r\n                error: null,\r\n                current: null\r\n            }\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            };\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            };\r\n        case FILTER_CONTACTS:\r\n            return {\r\n                ...state,\r\n                filtered: state.contacts.filter(contact => {\r\n                    const regex = new RegExp(`${action.payload}`, 'gi');\r\n                    return contact.name.match(regex) || contact.email.match(regex);\r\n                })\r\n            }\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filtered: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}